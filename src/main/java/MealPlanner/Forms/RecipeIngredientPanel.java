package MealPlanner.Forms;

import MealPlanner.Models.FoodItem;
import MealPlanner.Models.RecipeIngredient;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;

import static MealPlanner.Models.FoodItem.formatMilligrams;

public class RecipeIngredientPanel extends Panel {
    public RecipeIngredient recipeIngredient;

    public JPanel contentPane;
    public JLabel label;
    public JButton detailsButton;

    public RecipeIngredientPanel(RecipeIngredient recipeIngredient) {
        $$$setupUI$$$();

        this.recipeIngredient = recipeIngredient;
        FoodItem foodItem = recipeIngredient.getFoodItem();
        label.setText("%s %s(s) of %s".formatted(recipeIngredient.quantity, foodItem.unit, foodItem.name));
        detailsButton.addActionListener(event -> {
            ArrayList<String> keysList = new ArrayList<>();
            ArrayList<String> valuesList = new ArrayList<>();

            if (foodItem.food_group != null) {
                keysList.add("Food Group");
                valuesList.add(foodItem.food_group);
            }
            if (foodItem.calories != null) {
                keysList.add("Calories");
                valuesList.add(String.valueOf(foodItem.calories.intValue() * recipeIngredient.quantity.intValue()));
            }
            if (foodItem.fat != null) {
                keysList.add("Fat");
                valuesList.add(formatMilligrams(foodItem.fat.intValue() * recipeIngredient.quantity.intValue()));
            }
            if (foodItem.cholesterol != null) {
                keysList.add("Cholesterol");
                valuesList.add(formatMilligrams(foodItem.cholesterol.intValue() * recipeIngredient.quantity.intValue()));
            }
            if (foodItem.sodium != null) {
                keysList.add("Sodium");
                valuesList.add(formatMilligrams(foodItem.sodium.intValue() * recipeIngredient.quantity.intValue()));
            }
            if (foodItem.carbohydrates != null) {
                keysList.add("Carbohydrates");
                valuesList.add(formatMilligrams(foodItem.carbohydrates.intValue() * recipeIngredient.quantity.intValue()));
            }
            if (foodItem.dietary_fiber != null) {
                keysList.add("Dietary Fiber");
                valuesList.add(formatMilligrams(foodItem.dietary_fiber.intValue() * recipeIngredient.quantity.intValue()));
            }
            if (foodItem.sugars != null) {
                keysList.add("Sugars");
                valuesList.add(formatMilligrams(foodItem.sugars.intValue() * recipeIngredient.quantity.intValue()));
            }
            if (foodItem.protein != null) {
                keysList.add("Protein");
                valuesList.add(formatMilligrams(foodItem.protein.intValue() * recipeIngredient.quantity.intValue()));
            }

            new DetailsFrame(label.getText(), keysList.toArray(new String[0]), valuesList.toArray(new String[0]));
        });

        updateSize(contentPane);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new FlowLayout(FlowLayout.LEFT, 0, 5));
        contentPane.setAlignmentX(0.0f);
        final JSeparator separator1 = new JSeparator();
        separator1.setPreferredSize(new Dimension(40, 0));
        contentPane.add(separator1);
        label = new JLabel();
        label.setHorizontalAlignment(0);
        label.setHorizontalTextPosition(0);
        label.setText("Label");
        contentPane.add(label);
        final JSeparator separator2 = new JSeparator();
        separator2.setPreferredSize(new Dimension(10, 0));
        contentPane.add(separator2);
        detailsButton = new JButton();
        detailsButton.setText("Details");
        contentPane.add(detailsButton);
        final JSeparator separator3 = new JSeparator();
        separator3.setPreferredSize(new Dimension(10, 0));
        contentPane.add(separator3);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }

}
